{"posts":[{"title":"LA CTF 2023 Write-ups","text":"Lần đầu tự viết write-up :)) Cuộc thi này mình mới chỉ biết đến hôm nay (23/2) nên không tham gia kịp, chỉ là xem challenges và viết bài giải của mình thôi. Đánh giá của mình thì bài ở đây khá hay, đa số thời gian yêu cầu để giải hợp lý và không yêu cầu quá nhiều về các bước xử lý. One more time pad I heard the onetime pad is perfectly secure so I used it to send an important message to a friend, but now a UCLA competition is asking for the key? I threw that out a long time ago! Can you help me recover it? chall.py Bài này chỉ đơn giản là One-time-pad được sử dụng lặp đi lặp lại, việc của mình chỉ là XOR từng ký tự của plaintext với ciphertext để tìm ra key ban đầu. text.py1234567891011pt = b&quot;Long ago, the four nations lived together in harmony ...&quot;ct = &quot;200e0d13461a055b4e592b0054543902462d1000042b045f1c407f18581b56194c150c13030f0a5110593606111c3e1f5e305e174571431e&quot;key = &quot;&quot;for i in range(len(pt)): ch = int(ct[i*2:i*2+2], 16) k = pt[i] ^ ch key += chr(k) if chr(k) == '}': breakprint(&quot;Flag =&quot;, key) 1Flag = lactf{b4by_h1t_m3_0ne_m0r3_t1m3} Rolling in the mud uugh, these pigs in my pen are making a complete mess! They’re rolling all over the place!Anyway, can you decode this cipher they gave me, almost throwing it at me while rolling around?Answer in lowercase with symbols. In the image, { and } are characters that should appear in your flag, and replace spaces with _. Có thể nhìn ra ngay 5 chữ đầu tiên của Flag là lactf, chúng ta có thể suy đoán rằng ở đây sử dụng mật mã dạng lồng. Thật vậy, bảng mã hóa của bài này như sau: 1lactf{rolling_and_rolling_and_rolling_until_the_pigs_go_home}. P/s: Sau một hồi tìm hiểu thì mã này có tên là Pigpen cipher. Chinese lazy theorem 1 I heard about this cool theorem called the Chinese Remainder Theorem, but, uh… I’m feeling kinda tired right now. nc lac.tf 31110 chinese-lazy-theorem-1.py Bài này ý tưởng chỉ đơn giản là tính số $n = p * q$, vì target cần đoán bé hơn $n - 1$ nên $target % (n - 1) = target$. 12345678910111213141516from pwn import *r = remote(&quot;lac.tf&quot;, 31110)p = int(r.recvline().decode(), 10)q = int(r.recvline().decode(), 10)n = p*qr.sendlineafter(&quot;&gt;&gt; &quot;, b'1')r.sendlineafter(&quot;Type your modulus here: &quot;, str(n - 1).encode())trg = r.recvline().decode()r.sendlineafter(&quot;&gt;&gt; &quot;, b'2')r.sendlineafter(&quot;Type your guess here: &quot;, trg)flag = r.recvline().decode('utf-8').strip('\\n')print(&quot;Flag = &quot;, flag) 1Flag = lactf{too_lazy_to_bound_the_modulus} Greek cipher You think you’ve seen all of the “classic” ciphers? Instead of your standard cipher, I’ve created my own cipher: the monoalphagreek cipher!Answer with just the flag in lowercase with symbols left in. greek.txt Nhìn vào οσμιδ{...} có độ dài tương ứng với lactf{...}, do đó ta có suy đoán ban đầu đây là substitution cipher. Việc còn lại chỉ là tìm sự tương ứng giữa các từ để tìm ra bảng mã. plaintext123did you know that julius caesar was not the first person in history suspected of using encryption? me neither.did you know that julius caesar was probably fluent in greek? me neither.i like how greek character look though, even if i can't read them. 1lactf{i_guess_using_many_greek_characters_didn't_stop_you._well_played_i_must_say.congrats!} Guess the bit! I’m trying out for this new game show, but it doesn’t seem that hard since there are only two choices? Regardless, I heard someone name Pollard could help me out with it? nc lac.tf 31190 chall.py Ý tưởng cho bài này khá đơn giản, giả sử $c = 6^k \\ldotp t,; 6 \\not | ;t$, thì $c^2 = 6^{2k} \\ldotp t^2,; 6 \\not | ;t$. Việc cần làm hiện tại là kiểm tra số mũ của $6$ trong kết quả phân tích $c^{2}$. Nếu mũ chẵn thì $b = 0$ và ngược lại. 123456789101112131415161718192021222324from pwn import *from tqdm import tqdmr = remote(&quot;lac.tf&quot;, 31190)n = int(r.recvline()[4:].decode(), 10)a = int(r.recvline()[4:].decode(), 10)for _ in tqdm(range(150)): c = int(r.recvline()[4:].decode(), 10) k = 0 while (c % 6 == 0): k += 1 c = c // 6 if k % 2 == 0: choice = b'0' else: choice = b'1' r.sendlineafter(&quot;What is your guess? &quot;, choice) # print(&quot;choice = &quot;, choice,&quot; --&gt; PASS&quot;)r.recvline()flag = r.recvline().decode('utf-8').strip('\\n')print(&quot;Flag = &quot;, flag) 1Flag = lactf{sm4ll_pla1nt3xt_sp4ac3s_ar3n't_al4ways_e4sy}","link":"/2023/02/26/2023/la-ctf-2023-write-ups/"}],"tags":[{"name":"crypto","slug":"crypto","link":"/tags/crypto/"},{"name":"CTF","slug":"CTF","link":"/tags/CTF/"},{"name":"WriteUp","slug":"WriteUp","link":"/tags/WriteUp/"}],"categories":[{"name":"CTF Write-ups","slug":"CTF-Write-ups","link":"/categories/CTF-Write-ups/"}],"pages":[]}